# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-29T09:18:05+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, List, Optional

from pydantic import BaseModel, ConfigDict, Field, RootModel


class AlertAnnotationInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    annotationType: Optional[int] = None
    id: Optional[str] = None
    text: Optional[str] = None
    timestamp: Optional[datetime] = None
    userId: Optional[str] = None


class AlertAttachmentInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    contentType: Optional[str] = None
    id: Optional[str] = None
    name: Optional[str] = None


class AlertAuditReportFileInfo(BaseModel):
    pass
    model_config = ConfigDict(
        extra='forbid',
    )


class AlertCounts(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    acked: Optional[int] = None
    closed: Optional[int] = None
    end: Optional[datetime] = None
    lastModified: Optional[datetime] = None
    start: Optional[datetime] = None
    unhandled: Optional[int] = None


class AlertDeliveryStatusCodes(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2
    integer_4 = 4
    integer_6 = 6
    integer_8 = 8
    integer_22 = 22
    integer_24 = 24
    integer_26 = 26
    integer_30 = 30
    integer_31 = 31


class AlertFilterActions(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2


class AlertFilterModes(Enum):
    integer_0 = 0
    integer_1 = 1


class AlertHistoryInfoUserEntryType(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2
    integer_3 = 3
    integer_4 = 4
    integer_5 = 5
    integer_6 = 6
    integer_7 = 7


class AlertNotificationInfoChannelType(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2
    integer_4 = 4
    integer_8 = 8
    integer_16 = 16


class AlertNotificationInfoMessageStatus(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2
    integer_3 = 3
    integer_4 = 4
    integer_5 = 5
    integer_6 = 6
    integer_7 = 7
    integer_8 = 8
    integer_9 = 9
    integer_10 = 10


class AlertNotificationInfoUserStatus(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2
    integer_3 = 3
    integer_4 = 4
    integer_5 = 5
    integer_6 = 6


class AlertReport(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    last24Hours: Optional[AlertCounts] = None
    subscriptionId: Optional[str] = None
    teamCurrentDuty: Optional[AlertCounts] = None
    teamId: Optional[str] = None
    teamLastDuty: Optional[AlertCounts] = None
    userId: Optional[str] = None
    userLastDutyChange: Optional[AlertCounts] = None


class AlertResponseModes(Enum):
    integer_2 = 2
    integer_4 = 4


class AlertSeverities(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2


class AlertStatusCodes(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2
    integer_4 = 4
    integer_8 = 8
    integer_16 = 16
    integer_32 = 32


class CategoryAugmentationType(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2
    integer_3 = 3


class CategoryInfoOptions(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2
    integer_4 = 4
    integer_8 = 8


class CategoryMetrics(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    categoryId: Optional[str] = None
    last24Hours: Optional[int] = None
    lastAlert: Optional[datetime] = None
    subscriberCount: Optional[int] = None


class CategorySubscriptionStatus(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2


class ChangeAlertStatusInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description: Optional[str] = None
    userId: Optional[str] = None


class ChangeAlertStatusMultipleInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    alertIds: Optional[List[str]] = None
    description: Optional[str] = None
    userId: Optional[str] = None


class ChannelPriceInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    smsPerMessage: Optional[int] = None
    voicePerMinute: Optional[int] = None


class ChannelTypes(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2
    integer_4 = 4
    integer_8 = 8
    integer_16 = 16


class DeleteRangeInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    from_: Optional[datetime] = Field(None, alias='from')
    to: Optional[datetime] = None


class DeviceType(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2


class DutyAuditReportFileInfo(BaseModel):
    pass
    model_config = ConfigDict(
        extra='forbid',
    )


class DutySummaryInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    dutyEnd: Optional[datetime] = None
    dutyId: Optional[str] = None
    dutyStart: Optional[datetime] = None


class Encoding(Enum):
    integer_0 = 0
    integer_1 = 1


class ErrorResponseContentBase(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    details: Optional[str] = None
    message: Optional[str] = None


class EventParameterTypes(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2
    integer_3 = 3
    integer_4 = 4
    integer_5 = 5
    integer_6 = 6
    integer_7 = 7
    integer_8 = 8
    integer_9 = 9
    integer_10 = 10
    integer_11 = 11
    integer_12 = 12
    integer_13 = 13
    integer_14 = 14
    integer_15 = 15
    integer_16 = 16
    integer_17 = 17
    integer_100 = 100


class EventSeverities(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2


class EventSourceEndpointTypes(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2
    integer_3 = 3


class EventSourceTypes(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2
    integer_3 = 3
    integer_4 = 4
    integer_5 = 5


class EventStatusCodes(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2
    integer_3 = 3
    integer_4 = 4
    integer_5 = 5
    integer_6 = 6
    integer_1000 = 1000


class InvitedUserInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: Optional[str] = None
    isInvite: Optional[bool] = None
    mail: Optional[str] = None
    name: Optional[str] = None
    roleId: Optional[str] = None


class KeywordMatchingType(Enum):
    integer_0 = 0
    integer_1 = 1


class OverviewEvent(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    acknowledgedAlerts: Optional[List[str]] = None
    alertId: Optional[str] = None
    categoryId: Optional[str] = None
    closedAlerts: Optional[List[str]] = None
    creationTime: Optional[datetime] = None
    eventSourceType: Optional[EventSourceTypes] = None
    eventStatus: Optional[EventStatusCodes] = None
    id: Optional[str] = None
    lastModified: Optional[datetime] = None
    severity: Optional[EventSeverities] = None
    teamId: Optional[str] = None
    text: Optional[str] = None
    title: Optional[str] = None


class PagedResultsPublicContinuationToken(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    nextPartitionKey: Optional[str] = None
    nextRowKey: Optional[str] = None
    nextTableName: Optional[str] = None


class PersistentNotificationModes(Enum):
    integer_0 = 0
    integer_1 = 1


class PrepaidBalanceInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    balance: Optional[int] = None
    latestTopUp: Optional[datetime] = None
    pendingTransaction: Optional[bool] = None


class PrepaidSettingsInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    topUpAmount: Optional[int] = None
    topUpEnabled: Optional[bool] = None
    topUpLimit: Optional[int] = None


class PrepaidTransactionInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    autoTopUpId: Optional[str] = None
    created: Optional[datetime] = None
    createdBy: Optional[str] = None
    credits: Optional[int] = None
    currency: Optional[str] = None
    modified: Optional[datetime] = None
    packageCode: Optional[str] = None
    status: Optional[str] = None
    statusCode: Optional[int] = None
    subscriptionId: Optional[str] = None
    transactionId: Optional[str] = None


class ScheduleInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    end: Optional[datetime] = None
    id: Optional[str] = None
    options: Optional[int] = None
    start: Optional[datetime] = None
    userId: Optional[str] = None


class ScriptDescriptionData(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    description: Optional[str] = None
    name: Optional[str] = None
    scriptType: Optional[str] = None
    shortDescription: Optional[str] = None


class ScriptInstanceCustomUserData(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    customScriptDescription: Optional[str] = None
    customScriptName: Optional[str] = None
    instanceId: Optional[str] = None
    scriptId: Optional[str] = None


class ScriptInstanceInfoRuntimeStatus(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2
    integer_3 = 3
    integer__1 = -1


class ScriptLocalizationDetail(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    configMetadata: Optional[Any] = None
    data: Optional[ScriptDescriptionData] = None
    language: Optional[str] = None


class StatusChangeScope(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2


class StringItemsWrapper(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    items: Optional[List[str]] = None


class SubscriptionFeature(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: Optional[str] = None
    type: Optional[int] = None
    value: Optional[str] = None


class SubscriptionInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    branchId: Optional[str] = None
    country: Optional[str] = None
    currency: Optional[str] = None
    externalAccountId: Optional[str] = None
    id: Optional[str] = None
    name: Optional[str] = None
    nextBilling: Optional[datetime] = None
    ownerId: Optional[str] = None
    planCode: Optional[str] = None
    planState: Optional[int] = None
    referralEnabled: Optional[bool] = None
    status: Optional[int] = None


class SubscriptionProfile(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: Optional[str] = None


class TeamCategoryOptOutModes(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2


class TeamDutySummaryInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    dutyAssistEnabled: Optional[bool] = None
    dutySummaries: Optional[List[DutySummaryInfo]] = None


class TeamInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: Optional[str] = None
    memberIds: Optional[List[str]] = None
    name: Optional[str] = None
    subscriptionId: Optional[str] = None
    timezone: Optional[str] = None


class TeamProfile(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: Optional[str] = None


class TeamSetupProgress(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    completedSteps: Optional[List[str]] = None
    teamId: Optional[str] = None
    timestamp: Optional[datetime] = None


class UpdatePasswordInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    currentPassword: Optional[str] = None
    newPassword: Optional[str] = None


class UserDeliveryStatusInfoCodes(Enum):
    integer_0 = 0
    integer_1 = 1
    integer_2 = 2
    integer_4 = 4
    integer_6 = 6
    integer_8 = 8
    integer_24 = 24
    integer_26 = 26
    integer_30 = 30
    integer_31 = 31
    integer_32 = 32


class UserDutyInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    lastStatusChange: Optional[datetime] = None
    onDuty: Optional[bool] = None
    onManagerDuty: Optional[bool] = None
    overdue: Optional[bool] = None


class UserImage(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    content: Optional[str] = None
    contentDisposition: Optional[str] = None
    contentEncoding: Optional[str] = None
    contentType: Optional[str] = None
    lastModified: Optional[datetime] = None
    name: Optional[str] = None


class UserInvitationInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    inviterId: Optional[str] = None
    userMail: Optional[str] = None


class UserInvitationResult(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    errorCode: Optional[int] = None
    errorMessage: Optional[str] = None
    invitedUser: Optional[InvitedUserInfo] = None
    success: Optional[bool] = None


class UserInvite(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    email: Optional[str] = None
    roleId: Optional[str] = None


class UserLicenseInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    currentUsers: Optional[int] = None
    isFree: Optional[bool] = None
    isTrial: Optional[bool] = None
    licensedUsers: Optional[int] = None
    planCode: Optional[str] = None


class UserMembership(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    isValid: Optional[bool] = None
    roleId: Optional[str] = None
    teamId: Optional[str] = None


class UserProfile(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: Optional[str] = None


class UserSetupProgress(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    completedSteps: Optional[List[str]] = None
    timestamp: Optional[datetime] = None
    userId: Optional[str] = None


class UsersInvitation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    inviterId: Optional[str] = None
    invites: Optional[List[UserInvite]] = None


class WebhookBaseInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    externalAddress: Optional[str] = None
    name: Optional[str] = None
    teamId: Optional[str] = None


class WebhookInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    enabled: Optional[bool] = None
    externalAddress: Optional[str] = None
    id: Optional[str] = None
    name: Optional[str] = None
    subscriptionId: Optional[str] = None
    teamId: Optional[str] = None


class AlertsAlertIdAnnotationsGetResponse(RootModel[List[AlertAnnotationInfo]]):
    root: List[AlertAnnotationInfo]


class AlertsAlertIdAttachmentsGetResponse(RootModel[List[AlertAttachmentInfo]]):
    root: List[AlertAttachmentInfo]


class CategoriesImagesGetResponse(RootModel[List[str]]):
    root: List[str]


class CategoriesTeamIdMetricsGetResponse(RootModel[List[CategoryMetrics]]):
    root: List[CategoryMetrics]


class PrepaidTransactionsGetResponse(RootModel[List[PrepaidTransactionInfo]]):
    root: List[PrepaidTransactionInfo]


class SubscriptionsGetResponse(RootModel[List[SubscriptionInfo]]):
    root: List[SubscriptionInfo]


class SubscriptionsSubscriptionIdFeaturesGetResponse(
    RootModel[List[SubscriptionFeature]]
):
    root: List[SubscriptionFeature]


class SubscriptionsSubscriptionIdPrepaidTransactionsGetResponse(
    RootModel[List[PrepaidTransactionInfo]]
):
    root: List[PrepaidTransactionInfo]


class SubscriptionsSubscriptionIdTeamsGetResponse(RootModel[List[TeamInfo]]):
    root: List[TeamInfo]


class TeamsGetResponse(RootModel[List[TeamInfo]]):
    root: List[TeamInfo]


class TeamsTeamIdAlertReportsGetResponse(RootModel[List[AlertAuditReportFileInfo]]):
    root: List[AlertAuditReportFileInfo]


class TeamsTeamIdDutyReportsGetResponse(RootModel[List[DutyAuditReportFileInfo]]):
    root: List[DutyAuditReportFileInfo]


class TeamsTeamIdMembershipsGetResponse(RootModel[List[InvitedUserInfo]]):
    root: List[InvitedUserInfo]


class TeamsTeamIdMembershipsPostResponse(RootModel[List[UserInvitationResult]]):
    root: List[UserInvitationResult]


class TeamsTeamIdSchedulesGetResponse(RootModel[List[ScheduleInfo]]):
    root: List[ScheduleInfo]


class TeamsTeamIdSchedulesDeleteRangePostResponse(RootModel[List[ScheduleInfo]]):
    root: List[ScheduleInfo]


class TeamsTeamIdSchedulesMultiplePostRequest(RootModel[List[ScheduleInfo]]):
    root: List[ScheduleInfo]


class TeamsTeamIdSchedulesMultiplePostResponse(RootModel[List[ScheduleInfo]]):
    root: List[ScheduleInfo]


class WebhooksGetResponse(RootModel[List[WebhookInfo]]):
    root: List[WebhookInfo]


class AlertAttachment(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    content: Optional[str] = None
    contentType: Optional[str] = None
    encoding: Optional[Encoding] = None
    id: Optional[str] = None
    name: Optional[str] = None


class AlertFilterPublic(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    alertIds: Optional[List[str]] = None
    alertsAfterId: Optional[str] = None
    categoryIds: Optional[List[str]] = None
    continuationToken: Optional[PagedResultsPublicContinuationToken] = None
    maxCreationDate: Optional[datetime] = None
    minCreationDate: Optional[datetime] = None
    modifiedSince: Optional[datetime] = None
    showPersonalHiddenCategories: Optional[bool] = None
    statusCodes: Optional[AlertStatusCodes] = None
    teamId: Optional[str] = None
    textToSearch: Optional[str] = None


class AlertHistoryInfoEntry(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    id: Optional[str] = None
    timestamp: Optional[datetime] = None
    type: Optional[AlertHistoryInfoUserEntryType] = None
    userId: Optional[str] = None


class AlertNotificationInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    address: Optional[str] = None
    channelType: Optional[AlertNotificationInfoChannelType] = None
    deviceName: Optional[str] = None
    lastUpdate: Optional[datetime] = None
    messageStatus: Optional[AlertNotificationInfoMessageStatus] = None
    userId: Optional[str] = None
    userStatus: Optional[AlertNotificationInfoUserStatus] = None


class AlertSettings(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    filterAction: Optional[AlertFilterActions] = None
    filterMode: Optional[AlertFilterModes] = None
    optOutMode: Optional[TeamCategoryOptOutModes] = None
    persistentNotificicationMode: Optional[PersistentNotificationModes] = None
    responseMode: Optional[AlertResponseModes] = None
    responseTime: Optional[int] = None


class CategoryAugmentation(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    enabled: Optional[bool] = None
    name: Optional[str] = None
    type: Optional[CategoryAugmentationType] = None
    value: Optional[str] = None


class CategoryInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    augmentations: Optional[List[CategoryAugmentation]] = None
    color: Optional[str] = None
    id: Optional[str] = None
    imageName: Optional[str] = None
    isDefault: Optional[bool] = None
    keywordMatching: Optional[KeywordMatchingType] = None
    keywords: Optional[List[str]] = None
    lastMatch: Optional[datetime] = None
    name: Optional[str] = None
    options: Optional[CategoryInfoOptions] = None
    order: Optional[int] = None


class CategorySubscriptionInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    status: Optional[CategorySubscriptionStatus] = None
    userId: Optional[str] = None


class ChangeAlertStatusFilterInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    categoryIds: Optional[List[str]] = None
    maxDate: Optional[datetime] = None
    minDate: Optional[datetime] = None
    scope: Optional[StatusChangeScope] = None
    teamIds: Optional[List[str]] = None


class Device(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    appVersion: Optional[str] = None
    deviceId: Optional[str] = None
    name: Optional[str] = None
    osVersion: Optional[str] = None
    ringtone: Optional[str] = None
    ringtoneDisabled: Optional[bool] = None
    type: Optional[DeviceType] = None


class ErrorResponseContent(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    code: Optional[int] = None
    details: Optional[str] = None
    errors: Optional[List[ErrorResponseContentBase]] = None
    message: Optional[str] = None
    requestId: Optional[str] = None


class EventFilter(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    continuationToken: Optional[PagedResultsPublicContinuationToken] = None
    eventStatusCode: Optional[EventStatusCodes] = None
    maxCreationDate: Optional[datetime] = None
    minCreationDate: Optional[datetime] = None
    modifiedSince: Optional[datetime] = None
    teamId: Optional[str] = None
    textToSearch: Optional[str] = None


class EventParameterInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    name: Optional[str] = None
    order: Optional[int] = None
    type: Optional[EventParameterTypes] = None
    value: Optional[str] = None


class EventSourceEndpointInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    address: Optional[str] = None
    groupId: Optional[str] = None
    lastEventRaised: Optional[datetime] = None
    subscriptionId: Optional[str] = None
    teamId: Optional[str] = None
    type: Optional[EventSourceEndpointTypes] = None


class InventoryScriptInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    config: Optional[Any] = None
    data: Optional[ScriptDescriptionData] = None
    eventPattern: Optional[Any] = None
    scriptId: Optional[str] = None
    scriptLocalizationDetails: Optional[List[ScriptLocalizationDetail]] = None
    scriptName: Optional[str] = None
    visibility: Optional[str] = None


class OverviewEventPagedResultsPublic(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    continuationToken: Optional[PagedResultsPublicContinuationToken] = None
    hasMore: Optional[bool] = None
    results: Optional[List[OverviewEvent]] = None


class RaiseAlertInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    attachments: Optional[List[AlertAttachment]] = None
    category: Optional[str] = None
    externalId: Optional[str] = None
    flags: Optional[int] = None
    parameters: Optional[List[EventParameterInfo]] = None
    severity: Optional[AlertSeverities] = None
    text: Optional[str] = None
    title: Optional[str] = None


class ScriptInstanceInfoRuntimeInformationModel(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    status: Optional[ScriptInstanceInfoRuntimeStatus] = None
    statusMessage: Optional[str] = None


class UserDeliveryStatusInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    statusCode: Optional[UserDeliveryStatusInfoCodes] = None
    userId: Optional[str] = None


class AlertsAlertIdNotificationsGetResponse(RootModel[List[AlertNotificationInfo]]):
    root: List[AlertNotificationInfo]


class CategoriesTeamIdGetResponse(RootModel[List[CategoryInfo]]):
    root: List[CategoryInfo]


class CategoriesTeamIdCategoryIdSubscriptionsGetResponse(
    RootModel[List[CategorySubscriptionInfo]]
):
    root: List[CategorySubscriptionInfo]


class CategoriesTeamIdCategoryIdSubscriptionsPostRequest(
    RootModel[List[CategorySubscriptionInfo]]
):
    root: List[CategorySubscriptionInfo]


class CategoriesTeamIdCategoryIdSubscriptionsPostResponse(
    RootModel[List[CategorySubscriptionInfo]]
):
    root: List[CategorySubscriptionInfo]


class EventsEventIdParametersGetResponse(RootModel[List[EventParameterInfo]]):
    root: List[EventParameterInfo]


class ScriptsInventoryGetResponse(RootModel[List[InventoryScriptInfo]]):
    root: List[InventoryScriptInfo]


class ScriptsInventoryParsedGetResponse(RootModel[List[InventoryScriptInfo]]):
    root: List[InventoryScriptInfo]


class TeamsTeamIdEventSourcesGetResponse(RootModel[List[EventSourceEndpointInfo]]):
    root: List[EventSourceEndpointInfo]


class AlertDeliveryStatusInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    statusCode: Optional[AlertDeliveryStatusCodes] = None
    users: Optional[List[UserDeliveryStatusInfo]] = None


class AlertHistoryInfoDetailed(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    acknowledged: Optional[datetime] = None
    acknowledgedgements: Optional[List[str]] = None
    closed: Optional[datetime] = None
    closedBy: Optional[str] = None
    created: Optional[datetime] = None
    historyEntries: Optional[List[AlertHistoryInfoEntry]] = None


class AlertInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    annotations: Optional[List[AlertAnnotationInfo]] = None
    attachments: Optional[List[AlertAttachment]] = None
    category: Optional[str] = None
    categoryId: Optional[str] = None
    eventId: Optional[str] = None
    eventSourceId: Optional[str] = None
    eventSourceType: Optional[EventSourceTypes] = None
    flags: Optional[int] = None
    history: Optional[AlertHistoryInfoDetailed] = None
    id: Optional[str] = None
    lastModified: Optional[datetime] = None
    parameters: Optional[List[EventParameterInfo]] = None
    severity: Optional[AlertSeverities] = None
    status: Optional[AlertStatusCodes] = None
    subscriptionId: Optional[str] = None
    teamId: Optional[str] = None
    text: Optional[str] = None
    title: Optional[str] = None


class ContactAddressInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    address: Optional[str] = None
    channel: Optional[ChannelTypes] = None
    created: Optional[datetime] = None
    device: Optional[Device] = None
    id: Optional[str] = None
    lastUpdated: Optional[datetime] = None
    options: Optional[int] = None
    userId: Optional[str] = None


class OverviewAlert(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    alertDeliveryStatus: Optional[AlertDeliveryStatusInfo] = None
    annotations: Optional[List[AlertAnnotationInfo]] = None
    categoryId: Optional[str] = None
    eventId: Optional[str] = None
    flags: Optional[int] = None
    historyDetailed: Optional[AlertHistoryInfoDetailed] = None
    id: Optional[str] = None
    lastModified: Optional[datetime] = None
    requiredAcknowledgements: Optional[int] = None
    status: Optional[AlertStatusCodes] = None
    subscriptionId: Optional[str] = None
    teamId: Optional[str] = None
    text: Optional[str] = None
    title: Optional[str] = None


class OverviewAlertPagedResultsPublic(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    continuationToken: Optional[PagedResultsPublicContinuationToken] = None
    hasMore: Optional[bool] = None
    results: Optional[List[OverviewAlert]] = None


class ScriptInstanceDetails(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    config: Optional[Any] = None
    customScriptDescription: Optional[str] = None
    customScriptName: Optional[str] = None
    enabled: Optional[bool] = None
    eventPattern: Optional[Any] = None
    instanceId: Optional[str] = None
    lastModified: Optional[datetime] = None
    runtimeInformation: Optional[ScriptInstanceInfoRuntimeInformationModel] = None
    scriptId: Optional[str] = None
    scriptName: Optional[str] = None
    subscriptionId: Optional[str] = None
    teamId: Optional[str] = None


class UserInfo(BaseModel):
    model_config = ConfigDict(
        extra='forbid',
    )
    colorIndex: Optional[int] = None
    contactAddresses: Optional[List[ContactAddressInfo]] = None
    dutyInfo: Optional[UserDutyInfo] = None
    id: Optional[str] = None
    isDeactivated: Optional[bool] = None
    isInvite: Optional[bool] = None
    mail: Optional[str] = None
    name: Optional[str] = None
    roleId: Optional[str] = None
    subscriptionId: Optional[str] = None
    timeZone: Optional[str] = None
    userImageLastModified: Optional[datetime] = None


class ScriptsInstancesGetResponse(RootModel[List[ScriptInstanceDetails]]):
    root: List[ScriptInstanceDetails]


class UsersGetResponse(RootModel[List[UserInfo]]):
    root: List[UserInfo]
